#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Gift Responder
"""

import sys
import asyncio
from pyrogram import Client
from pyrogram.errors import RPCError

def test_config():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Gift Responder...\n")
    
    try:
        from gift_responder_config import *
        print("‚úÖ –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
    if not validate_config():
        return False
    
    print("‚úÖ –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram
    print("\nüîó –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram...")
    
    try:
        client = Client(
            name="test_session",
            api_id=API_ID,
            api_hash=API_HASH,
            phone_number=PHONE_NUMBER
        )
        
        async def test_connection():
            try:
                await client.start()
                me = await client.get_me()
                print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
                print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{me.username} ({me.first_name})")
                print(f"   ID: {me.id}")
                await client.stop()
                return True
            except RPCError as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ Telegram API: {e}")
                return False
            except Exception as e:
                print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
                return False
        
        result = asyncio.run(test_connection())
        if not result:
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–µ—Ç–µ–∫—Ü–∏–∏
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–µ—Ç–µ–∫—Ü–∏–∏...")
    print(f"   –ö–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤: {len(GIFT_KEYWORDS)}")
    print(f"   –°—Ç–∏–∫–µ—Ä –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤: {len(GIFT_STICKER_KEYWORDS)}")
    print(f"   –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –¥–µ—Ç–µ–∫—Ü–∏—è: {'–í–∫–ª—é—á–µ–Ω–∞' if ENABLE_EXTENDED_DETECTION else '–í—ã–∫–ª—é—á–µ–Ω–∞'}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    print("\nüõ°Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...")
    print(f"   –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(IGNORED_USER_IDS)}")
    print(f"   –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º—ã—Ö —á–∞—Ç–æ–≤: {len(IGNORED_CHAT_IDS)}")
    print(f"   –ê–Ω—Ç–∏—Å–ø–∞–º –∏–Ω—Ç–µ—Ä–≤–∞–ª: {MIN_RESPONSE_INTERVAL} —Å–µ–∫")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    print("\nüìù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è...")
    print(f"   –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è: {LOG_LEVEL}")
    print(f"   –§–∞–π–ª –ª–æ–≥–æ–≤: {LOG_FILENAME}")
    print(f"   –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–¥–∞—Ä–∫–æ–≤: {'–î–∞' if SAVE_GIFT_LOGS else '–ù–µ—Ç'}")
    if SAVE_GIFT_LOGS:
        print(f"   –§–∞–π–ª –ø–æ–¥–∞—Ä–∫–æ–≤: {GIFT_LOG_FILENAME}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    print("\nüîî –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    if ENABLE_NOTIFICATION_CHAT:
        print(f"   –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –í–∫–ª—é—á–µ–Ω—ã")
        print(f"   ID —á–∞—Ç–∞: {NOTIFICATION_CHAT_ID}")
    else:
        print("   –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –í—ã–∫–ª—é—á–µ–Ω—ã")
    
    print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("üöÄ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!")
    
    return True

def test_gift_detection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–µ—Ç–µ–∫—Ü–∏—é –ø–æ–¥–∞—Ä–∫–æ–≤"""
    print("\nüéÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ—Ç–µ–∫—Ü–∏–∏ –ø–æ–¥–∞—Ä–∫–æ–≤...")
    
    try:
        from gift_responder_config import GIFT_KEYWORDS, GIFT_STICKER_KEYWORDS
    except ImportError:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é")
        return False
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    test_messages = [
        "üéÅ –í–æ—Ç —Ç–µ–±–µ –ø–æ–¥–∞—Ä–æ–∫!",
        "I have a gift for you",
        "–î–∞—Ä—é —Ç–µ–±–µ –∑–≤–µ–∑–¥—ã ‚≠ê",
        "Here are some stars üíé",
        "–û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –ø–æ–¥–∞—Ä–∫–æ–≤",
        "üéâ Surprise! üéä",
        "1500 ‚≠ê –∑–∞ —ç—Ç–æ"
    ]
    
    print("   –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è:")
    for i, message in enumerate(test_messages, 1):
        detected = any(
            keyword.lower() in message.lower() 
            for keyword in GIFT_KEYWORDS
        )
        status = "‚úÖ –ü–û–î–ê–†–û–ö" if detected else "‚ùå –ù–ï –ü–û–î–ê–†–û–ö"
        print(f"   {i}. '{message}' -> {status}")
    
    return True

if __name__ == "__main__":
    print("üéÅ Gift Responder - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏\n")
    
    success = test_config()
    
    if success:
        test_gift_detection()
        print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        print("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å telegram_gift_responder.py")
    else:
        print("\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–æ!")
        print("üìù –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ gift_responder_config.py")
        sys.exit(1)